@{
  Layout = "_Layout";
}

@using DoctorOffice.Models
@model DoctorOffice.Models.Doctor

<h2>Doctor Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>  
<h3>@Html.DisplayNameFor(model => model.Specialty): @Html.DisplayFor(model => model.Specialty.Name)</h3>

@if(@Model.JoinEntities.Count == 0)
{
  <p>This doctor does not have any patients yet!</p>
}
else
{
  <h4 id=doctor-header>Click here to view patients:</h4>

  <ul id=full-patient-list class=hidden>
    @foreach(DoctorPatient join in Model.JoinEntities)
    {
      <li id=patientlist-@join.PatientId class=patient>Patient: @join.Patient.Name
      @using (Html.BeginForm("DeleteJoin", "Doctors"))
      {
        @Html.Hidden("joinId", @join.DoctorPatientId)
        <input type="submit" value="Delete"/>
      }
      <div id=patientdetails-@join.PatientId class="hidden">
        <p>appointment info here</p>
      </div>
      </li>
    }
  </ul>
}

<p>@Html.ActionLink("Back to Doctors", "Index")</p>
<p>@Html.ActionLink("Edit Doctor or Specialty", "Edit", new { id = Model.DoctorId })</p>
<p>@Html.ActionLink("Add a Patient", "AddPatient", new { id = Model.DoctorId })</p>
<p>@Html.ActionLink("Delete Doctor", "Delete", new { id = Model.DoctorId })</p>

<script type="text/javascript">
  document.getElementById("doctor-header").addEventListener("click", e => {
    document.getElementById("full-patient-list").classList.toggle("hidden");
  });

  document.querySelectorAll(".patient").forEach(element => {
    element.addEventListener("click", e => {
      let id = element.id.split('-')[1];
      document.getElementById("patientdetails-" + id).classList.toggle("hidden");
    });
  });
  
  </script>